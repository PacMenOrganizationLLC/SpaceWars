@using SpaceWars.Logic
@using SpaceWars.Logic.Actions
@inject Game Game

@if (Player == null)
{
    <p> Invalid Token </p>
}
else
{
    <div class="row border border-3 rounded p-2 w-100 bg-light">
        <h4>Action Queue</h4>
        <ul>
            @foreach (var action in PlayerActions)
            {
                <li class="small">

                    @switch (action)
                    {
                        case MoveForwardAction MFAction:
                            <div>@MFAction.Name</div>
                            break;
                        case FireWeaponAction FWAction:
                            <div>@FWAction.Name: @FWAction.WeaponName</div>
                            break;
                        case ChangeHeadingAction CHAction:
                            <div>@CHAction.Name: @CHAction.NewHeading&deg;</div>
                            break;
                        case RepairAction RPAction:
                            <div>@RPAction.Name: @RPAction.Amount</div>
                            break;
                        case PurchaseAction PUAction:
                            <div>@PUAction.Name: @PUAction.ItemToPurchase</div>
                            break;
                        default:
                            <div>@action.Name;</div>
                            break;
                    }
                </li>
            }
        </ul>
    </div>
}

@code {
    [Parameter] public Player? Player { get; set; }
    public List<GamePlayAction> PlayerActions { get; set; } = new List<GamePlayAction>();

    protected override void OnParametersSet()
    {
        if (Player == null)
        {
            throw new Exception("Token is null");
        }

        PlayerActions = Player.GetActions().Take(15).ToList();
    }
}
