@using Microsoft.Extensions.Options
@using SpaceWars.Logic
@rendermode InteractiveServer
@page "/admin"
@inject Game Game
@inject IOptions<GameConfig> Config
@inject NavigationManager NavManager

@if (!isPasswordCorrect)
{
    <EditForm Model="@loginModel" OnValidSubmit="VerifyPassword" FormName="Login">
        <label class="form-label">Password:</label>
        <div class="row">
            <div class="col-3">
                <InputText @bind-Value="loginModel.Password"
                           type="password"
                           class="form-control" />
            </div>
            <div class="col-auto">
                <button type="submit"
                        class="btn btn-primary">
                    Submit
                </button>
            </div>
        </div>
    </EditForm>
}
else
{
    <div>
        <h2>Admin Page</h2>
        <div>Game Status: @Game.State</div>

        @if (Game.State == GameState.Joining)
        {
            <label class="form-label">Tick Frequency (milliseconds):</label>
            <div class="row">
                <div class="col-3">
                    <InputNumber @bind-Value="frequency"
                                 type="number"
                                 class="form-control" />
                </div>
                <div class="col-auto">
                    <button @onclick="UpdateFrequency"
                            class="btn btn-primary">
                        Save
                    </button>
                </div>
            </div>
        }
        <div class="row my-2">
            <div class="col-auto">
                <button class="btn btn-outline-danger"
                        @onclick="ResetGame">
                    Reset Game
                </button>
            </div>
            @if (Game.State == GameState.Joining)
            {
                <div class="col-auto">
                    <button class="btn btn-primary"
                            @onclick="StartGame">
                        Start Game
                    </button>
                </div>
            }
            @if (Game.State == GameState.Playing)
            {
                <div class="col-auto">
                    <button class="btn btn-danger"
                            @onclick="StopGame">
                        Stop Game
                    </button>
                </div>
            }
        </div>
    </div>
}

@if (errorMessage != null)
{
    <p class="small text-danger">@errorMessage</p>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private bool isPasswordCorrect = false;
    private string? errorMessage;
    private int frequency = 0;

    protected override void OnInitialized()
    {
        frequency = Config.Value.TickFrequencyMilliseconds;
    }


    private void VerifyPassword()
    {
        if (loginModel.Password == Config.Value.Password)
        {
            isPasswordCorrect = true;
            errorMessage = null;
        }
        else
        {
            errorMessage = "Password is incorrect.";
        }
    }

    private class LoginModel
    {
        public string Password { get; set; }
    }

    private void StartGame()
    {
        try
        {
            Game.Start();
        }
        catch
        {
            errorMessage = "Failed to start game.";
        }
        NavManager.NavigateTo("/spectatorview");
    }

    private void ResetGame()
    {
        Game.Reset();
    }

    private void StopGame()
    {
        Game.Stop();
    }

    private void UpdateFrequency()
    {
        Game.UpdateFrequency(frequency);
        Config.Value.TickFrequencyMilliseconds = frequency;
    }
}
