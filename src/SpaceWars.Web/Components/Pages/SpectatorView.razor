@page "/spectatorview"
@* @rendermode InteractiveServer *@
@using SpaceWars.Logic
@using SpaceWars.Web.Components.Layout;
@using SpaceWars.Web.Components.SpectatorView;
@inject Game Game
@layout SpectatorViewLayout


<div class="d-flex flex-column bg-dark h-100 w-100 map-border">
    <div class="flex-grow-1 bg-dark text-dark map">
        @foreach (var player in Players)
        {
            <Ship Player=@player Map=@Map />
        }
    </div>
    <Scoreboard Players=@Players />
</div>


<style>
    .ship {
        position: absolute;
        width: 50px;
        height: 50px;
    }

    .map-border {
        padding: 50px;
    }

    .map {
        position: relative;
    }

    .scoreboard {
        opacity: 0.5;
    }

    .scoreboard:hover {
        opacity: 1;
    }
</style>

@code {
    public IEnumerable<Player>? Players => Game.Map?.Players;
    public GameMap? Map;

    protected override void OnInitialized()
    {
        Map = Game.Map;
        Game.Ticked += GameTicked;
        Game.Tick();
    }

    public void GameTicked(object? sender, EventArgs e)
    {   
        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
